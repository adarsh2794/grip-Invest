{"ast":null,"code":"var _jsxFileName = \"/home/adarsh/Desktop/Companies/crm/src/components/search/chipSearch.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Chip from '@material-ui/core/Chip';\nimport Paper from '@material-ui/core/Paper';\nimport { inject } from 'mobx-react'; // import TagFacesIcon from '@material-ui/icons/TagFaces';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    justifyContent: 'center',\n    flexWrap: 'wrap',\n    listStyle: 'none',\n    padding: theme.spacing(0.5),\n    margin: 0\n  },\n  chip: {\n    margin: theme.spacing(0.5)\n  }\n}));\nexport default function ChipsArray() {\n  _s();\n\n  var _props$CRMStores;\n\n  const classes = useStyles();\n  inject(\"CrmStores\");\n  const [chipData, setChipData] = useState([...((_props$CRMStores = props.CRMStores) === null || _props$CRMStores === void 0 ? void 0 : _props$CRMStores.owners)]);\n\n  const handleDelete = chipToDelete => () => {\n    setChipData(chips => chips.filter(chip => chip.key !== chipToDelete.key));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    component: \"ul\",\n    className: classes.root,\n    children: chipData.map(data => {\n      let icon; // if (data.label === 'React') {\n      //   icon = <TagFacesIcon />;\n      // }\n\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(Chip, {\n          icon: icon,\n          label: data.label,\n          onDelete: data.label === 'React' ? undefined : handleDelete(data),\n          className: classes.chip\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this)\n      }, data.key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ChipsArray, \"kpk+W3iQWAosaSqBmPWW6fdHtvQ=\", false, function () {\n  return [useStyles];\n});\n\n_c = ChipsArray;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChipsArray\");","map":{"version":3,"sources":["/home/adarsh/Desktop/Companies/crm/src/components/search/chipSearch.js"],"names":["React","makeStyles","Chip","Paper","inject","useStyles","theme","root","display","justifyContent","flexWrap","listStyle","padding","spacing","margin","chip","ChipsArray","classes","chipData","setChipData","useState","props","CRMStores","owners","handleDelete","chipToDelete","chips","filter","key","map","data","icon","label","undefined"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,SAASC,MAAT,QAAuB,YAAvB,C,CACA;;;AAEA,MAAMC,SAAS,GAAGJ,UAAU,CAAEK,KAAD,KAAY;AACvCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,OAAO,EAAE,MADL;AAEJC,IAAAA,cAAc,EAAE,QAFZ;AAGJC,IAAAA,QAAQ,EAAE,MAHN;AAIJC,IAAAA,SAAS,EAAE,MAJP;AAKJC,IAAAA,OAAO,EAAEN,KAAK,CAACO,OAAN,CAAc,GAAd,CALL;AAMJC,IAAAA,MAAM,EAAE;AANJ,GADiC;AASvCC,EAAAA,IAAI,EAAE;AACJD,IAAAA,MAAM,EAAER,KAAK,CAACO,OAAN,CAAc,GAAd;AADJ;AATiC,CAAZ,CAAD,CAA5B;AAcA,eAAe,SAASG,UAAT,GAAsB;AAAA;;AAAA;;AACnC,QAAMC,OAAO,GAAGZ,SAAS,EAAzB;AACAD,EAAAA,MAAM,CAAC,WAAD,CAAN;AACA,QAAM,CAACc,QAAD,EAAWC,WAAX,IAA0BC,QAAQ,CAAC,CAAC,wBAAGC,KAAK,CAACC,SAAT,qDAAG,iBAAiBC,MAApB,CAAD,CAAD,CAAxC;;AAGA,QAAMC,YAAY,GAAIC,YAAD,IAAkB,MAAM;AAC3CN,IAAAA,WAAW,CAAEO,KAAD,IAAWA,KAAK,CAACC,MAAN,CAAcZ,IAAD,IAAUA,IAAI,CAACa,GAAL,KAAaH,YAAY,CAACG,GAAjD,CAAZ,CAAX;AACD,GAFD;;AAIA,sBACE,QAAC,KAAD;AAAO,IAAA,SAAS,EAAC,IAAjB;AAAsB,IAAA,SAAS,EAAEX,OAAO,CAACV,IAAzC;AAAA,cACGW,QAAQ,CAACW,GAAT,CAAcC,IAAD,IAAU;AACtB,UAAIC,IAAJ,CADsB,CAGtB;AACA;AACA;;AAEA,0BACE;AAAA,+BACE,QAAC,IAAD;AACE,UAAA,IAAI,EAAEA,IADR;AAEE,UAAA,KAAK,EAAED,IAAI,CAACE,KAFd;AAGE,UAAA,QAAQ,EAAEF,IAAI,CAACE,KAAL,KAAe,OAAf,GAAyBC,SAAzB,GAAqCT,YAAY,CAACM,IAAD,CAH7D;AAIE,UAAA,SAAS,EAAEb,OAAO,CAACF;AAJrB;AAAA;AAAA;AAAA;AAAA;AADF,SAASe,IAAI,CAACF,GAAd;AAAA;AAAA;AAAA;AAAA,cADF;AAUD,KAjBA;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD;;GAhCuBZ,U;UACNX,S;;;KADMW,U","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Chip from '@material-ui/core/Chip';\nimport Paper from '@material-ui/core/Paper';\nimport { inject } from 'mobx-react';\n// import TagFacesIcon from '@material-ui/icons/TagFaces';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    justifyContent: 'center',\n    flexWrap: 'wrap',\n    listStyle: 'none',\n    padding: theme.spacing(0.5),\n    margin: 0,\n  },\n  chip: {\n    margin: theme.spacing(0.5),\n  },\n}));\n\nexport default function ChipsArray() {\n  const classes = useStyles();\n  inject(\"CrmStores\")\n  const [chipData, setChipData] = useState([...props.CRMStores?.owners])\n\n\n  const handleDelete = (chipToDelete) => () => {\n    setChipData((chips) => chips.filter((chip) => chip.key !== chipToDelete.key));\n  };\n\n  return (\n    <Paper component=\"ul\" className={classes.root}>\n      {chipData.map((data) => {\n        let icon;\n\n        // if (data.label === 'React') {\n        //   icon = <TagFacesIcon />;\n        // }\n\n        return (\n          <li key={data.key}>\n            <Chip\n              icon={icon}\n              label={data.label}\n              onDelete={data.label === 'React' ? undefined : handleDelete(data)}\n              className={classes.chip}\n            />\n          </li>\n        );\n      })}\n    </Paper>\n  );\n}"]},"metadata":{},"sourceType":"module"}