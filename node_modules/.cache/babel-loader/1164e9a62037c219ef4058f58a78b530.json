{"ast":null,"code":"var _jsxFileName = \"/home/adarsh/Desktop/Companies/crm/src/components/actions/AddClient.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport 'materialize-css';\nimport { inject, observer } from 'mobx-react';\nimport Button from '@material-ui/core/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddClient = inject(\"CRMStores\", \"UpdateStores\")(observer(_s(props => {\n  _s();\n\n  const countries = [\"Afghanistan\", \"Albania\", \"Algeria\", \"American Samoa\", \"Andorra\", \"Angola\", \"Anguilla\", \"Antarctica\", \"Antigua and Barbuda\", \"Argentina\", \"Armenia\", \"Aruba\", \"Australia\", \"Austria\", \"Azerbaijan\", \"Bahamas\", \"Bahrain\", \"Bangladesh\", \"Barbados\", \"Belarus\", \"Belgium\", \"Belize\", \"Benin\", \"Bermuda\", \"Bhutan\", \"Bolivia\", \"Bosnia and Herzegowina\", \"Botswana\", \"Bouvet Island\", \"Brazil\", \"British Indian Ocean Territory\", \"Brunei Darussalam\", \"Bulgaria\", \"Burkina Faso\", \"Burundi\", \"Cambodia\", \"Cameroon\", \"Canada\", \"Cape Verde\", \"Cayman Islands\", \"Central African Republic\", \"Chad\", \"Chile\", \"China\", \"Christmas Island\", \"Cocos (Keeling) Islands\", \"Colombia\", \"Comoros\", \"Congo\", \"Congo, the Democratic Republic of the\", \"Cook Islands\", \"Costa Rica\", \"Cote d'Ivoire\", \"Croatia (Hrvatska)\", \"Cuba\", \"Cyprus\", \"Czech Republic\", \"Denmark\", \"Djibouti\", \"Dominica\", \"Dominican Republic\", \"East Timor\", \"Ecuador\", \"Egypt\", \"El Salvador\", \"Equatorial Guinea\", \"Eritrea\", \"Estonia\", \"Ethiopia\", \"Falkland Islands (Malvinas)\", \"Faroe Islands\", \"Fiji\", \"Finland\", \"France\", \"France Metropolitan\", \"French Guiana\", \"French Polynesia\", \"French Southern Territories\", \"Gabon\", \"Gambia\", \"Georgia\", \"Germany\", \"Ghana\", \"Gibraltar\", \"Greece\", \"Greenland\", \"Grenada\", \"Guadeloupe\", \"Guam\", \"Guatemala\", \"Guinea\", \"Guinea-Bissau\", \"Guyana\", \"Haiti\", \"Heard and Mc Donald Islands\", \"Holy See (Vatican City State)\", \"Honduras\", \"Hong Kong\", \"Hungary\", \"Iceland\", \"India\", \"Indonesia\", \"Iran (Islamic Republic of)\", \"Iraq\", \"Ireland\", \"Israel\", \"Italy\", \"Jamaica\", \"Japan\", \"Jordan\", \"Kazakhstan\", \"Kenya\", \"Kiribati\", \"Korea, Democratic People's Republic of\", \"Korea, Republic of\", \"Kuwait\", \"Kyrgyzstan\", \"Lao, People's Democratic Republic\", \"Latvia\", \"Lebanon\", \"Lesotho\", \"Liberia\", \"Libyan Arab Jamahiriya\", \"Liechtenstein\", \"Lithuania\", \"Luxembourg\", \"Macau\", \"Macedonia, The Former Yugoslav Republic of\", \"Madagascar\", \"Malawi\", \"Malaysia\", \"Maldives\", \"Mali\", \"Malta\", \"Marshall Islands\", \"Martinique\", \"Mauritania\", \"Mauritius\", \"Mayotte\", \"Mexico\", \"Micronesia, Federated States of\", \"Moldova, Republic of\", \"Monaco\", \"Mongolia\", \"Montserrat\", \"Morocco\", \"Mozambique\", \"Myanmar\", \"Namibia\", \"Nauru\", \"Nepal\", \"Netherlands\", \"Netherlands Antilles\", \"New Caledonia\", \"New Zealand\", \"Nicaragua\", \"Niger\", \"Nigeria\", \"Niue\", \"Norfolk Island\", \"Northern Mariana Islands\", \"Norway\", \"Oman\", \"Pakistan\", \"Palau\", \"Panama\", \"Papua New Guinea\", \"Paraguay\", \"Peru\", \"Philippines\", \"Pitcairn\", \"Poland\", \"Portugal\", \"Puerto Rico\", \"Qatar\", \"Reunion\", \"Romania\", \"Russian Federation\", \"Rwanda\", \"Saint Kitts and Nevis\", \"Saint Lucia\", \"Saint Vincent and the Grenadines\", \"Samoa\", \"San Marino\", \"Sao Tome and Principe\", \"Saudi Arabia\", \"Senegal\", \"Seychelles\", \"Sierra Leone\", \"Singapore\", \"Slovakia (Slovak Republic)\", \"Slovenia\", \"Solomon Islands\", \"Somalia\", \"South Africa\", \"South Georgia and the South Sandwich Islands\", \"Spain\", \"Sri Lanka\", \"St. Helena\", \"St. Pierre and Miquelon\", \"Sudan\", \"Suriname\", \"Svalbard and Jan Mayen Islands\", \"Swaziland\", \"Sweden\", \"Switzerland\", \"Syrian Arab Republic\", \"Taiwan, Province of China\", \"Tajikistan\", \"Tanzania, United Republic of\", \"Thailand\", \"Togo\", \"Tokelau\", \"Tonga\", \"Trinidad and Tobago\", \"Tunisia\", \"Turkey\", \"Turkmenistan\", \"Turks and Caicos Islands\", \"Tuvalu\", \"Uganda\", \"Ukraine\", \"United Arab Emirates\", \"United Kingdom\", \"United States\", \"United States Minor Outlying Islands\", \"Uruguay\", \"Uzbekistan\", \"Vanuatu\", \"Venezuela\", \"Vietnam\", \"Virgin Islands (British)\", \"Virgin Islands (U.S.)\", \"Wallis and Futuna Islands\", \"Western Sahara\", \"Yemen\", \"Yugoslavia\", \"Zambia\", \"Zimbabwe\"];\n  const assetTypes = [\"CAR\", \"BIKE\", \"BUS\"];\n  useEffect(() => {\n    props.CRMStores.getOwners();\n    console.log(props.CRMStores.owners);\n  }, [props.CRMStores]);\n  let handleInput = props.UpdateStores.handleInput;\n  let data = props.UpdateStores;\n\n  const addClient = () => {\n    console.log(\"In add client function\");\n    console.log(data.owner);\n    let newClient = {\n      last: data.last,\n      first: data.first,\n      email: data.email,\n      sold: 0,\n      date: data.date,\n      owner: data.owner,\n      country: data.country,\n      email_type: null\n    };\n    props.CRMStores.addClient(newClient);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"inputsContainer\",\n    children: [\" \", /*#__PURE__*/_jsxDEV(\"h5\", {\n      children: \"Add New Client:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 43\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      name: 'first',\n      type: 'text',\n      onChange: handleInput,\n      placeholder: 'First Name',\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      name: 'last',\n      type: 'text',\n      onChange: handleInput,\n      placeholder: 'Last Name',\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      name: 'email',\n      type: 'text',\n      onChange: handleInput,\n      placeholder: 'Email',\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      name: 'date',\n      type: 'date',\n      onChange: handleInput,\n      placeholder: 'Date',\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"y\",\n      children: /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: handleInput,\n        name: 'country',\n        className: \"dropdown\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          selected: true,\n          hidden: true,\n          children: \"Select Country\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 17\n        }, this), countries.map(country => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: country,\n          children: country\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 43\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 32\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"assetType\",\n      children: /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: handleInput,\n        name: 'Asset Type',\n        className: \"dropdown\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          selected: true,\n          hidden: true,\n          children: \"Select Country\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 17\n        }, this), countries.map(country => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: country,\n          children: country\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 43\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 40\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"y\",\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"select\", {\n        name: 'owner',\n        onChange: handleInput,\n        className: \"dropdown\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          selected: true,\n          hidden: true,\n          children: \"Select Owner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 17\n        }, this), props.CRMStores.owners && props.CRMStores.owners.map(owner => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: owner.owner,\n          children: owner.owner\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 35\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"assetType\",\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"select\", {\n        name: 'asset_type',\n        onChange: handleInput,\n        className: \"dropdown\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          selected: true,\n          hidden: true,\n          children: \"Select Asset Type\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }, this), [\"CAR\", \"BIKE\", \"BUS\"].map(assetType => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: assetType,\n          children: assetType\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 39\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 41\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"y\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        onClick: addClient,\n        children: \"Add new client\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 32\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n}, \"OD7bBpZva5O2jO+Puf00hKivP7c=\")));\nexport default AddClient;","map":{"version":3,"sources":["/home/adarsh/Desktop/Companies/crm/src/components/actions/AddClient.js"],"names":["React","useEffect","inject","observer","Button","AddClient","props","countries","assetTypes","CRMStores","getOwners","console","log","owners","handleInput","UpdateStores","data","addClient","owner","newClient","last","first","email","sold","date","country","email_type","map","assetType"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react'\nimport 'materialize-css';\nimport { inject, observer } from 'mobx-react'\nimport Button from '@material-ui/core/Button';\n\nconst AddClient = inject(\"CRMStores\", \"UpdateStores\")(observer((props) => {\n\n    const countries = [\"Afghanistan\", \"Albania\", \"Algeria\", \"American Samoa\", \"Andorra\", \"Angola\",\n        \"Anguilla\", \"Antarctica\", \"Antigua and Barbuda\", \"Argentina\", \"Armenia\", \"Aruba\",\n        \"Australia\", \"Austria\", \"Azerbaijan\", \"Bahamas\", \"Bahrain\", \"Bangladesh\", \"Barbados\",\n        \"Belarus\", \"Belgium\", \"Belize\", \"Benin\", \"Bermuda\", \"Bhutan\", \"Bolivia\",\n        \"Bosnia and Herzegowina\", \"Botswana\", \"Bouvet Island\", \"Brazil\", \"British Indian Ocean Territory\", \"Brunei Darussalam\", \"Bulgaria\", \"Burkina Faso\", \"Burundi\", \"Cambodia\", \"Cameroon\", \"Canada\", \"Cape Verde\", \"Cayman Islands\", \"Central African Republic\", \"Chad\", \"Chile\", \"China\", \"Christmas Island\", \"Cocos (Keeling) Islands\", \"Colombia\", \"Comoros\", \"Congo\", \"Congo, the Democratic Republic of the\", \"Cook Islands\", \"Costa Rica\", \"Cote d'Ivoire\", \"Croatia (Hrvatska)\", \"Cuba\", \"Cyprus\", \"Czech Republic\", \"Denmark\", \"Djibouti\", \"Dominica\", \"Dominican Republic\", \"East Timor\", \"Ecuador\", \"Egypt\", \"El Salvador\", \"Equatorial Guinea\", \"Eritrea\", \"Estonia\", \"Ethiopia\", \"Falkland Islands (Malvinas)\", \"Faroe Islands\", \"Fiji\", \"Finland\", \"France\", \"France Metropolitan\", \"French Guiana\", \"French Polynesia\", \"French Southern Territories\", \"Gabon\", \"Gambia\", \"Georgia\", \"Germany\", \"Ghana\", \"Gibraltar\", \"Greece\", \"Greenland\", \"Grenada\", \"Guadeloupe\", \"Guam\", \"Guatemala\", \"Guinea\", \"Guinea-Bissau\", \"Guyana\", \"Haiti\", \"Heard and Mc Donald Islands\", \"Holy See (Vatican City State)\", \"Honduras\", \"Hong Kong\", \"Hungary\", \"Iceland\", \"India\", \"Indonesia\", \"Iran (Islamic Republic of)\", \"Iraq\", \"Ireland\", \"Israel\", \"Italy\", \"Jamaica\", \"Japan\", \"Jordan\", \"Kazakhstan\", \"Kenya\", \"Kiribati\", \"Korea, Democratic People's Republic of\", \"Korea, Republic of\", \"Kuwait\", \"Kyrgyzstan\", \"Lao, People's Democratic Republic\", \"Latvia\", \"Lebanon\", \"Lesotho\", \"Liberia\", \"Libyan Arab Jamahiriya\", \"Liechtenstein\", \"Lithuania\", \"Luxembourg\", \"Macau\", \"Macedonia, The Former Yugoslav Republic of\", \"Madagascar\", \"Malawi\", \"Malaysia\", \"Maldives\", \"Mali\", \"Malta\", \"Marshall Islands\", \"Martinique\", \"Mauritania\", \"Mauritius\", \"Mayotte\", \"Mexico\", \"Micronesia, Federated States of\", \"Moldova, Republic of\", \"Monaco\", \"Mongolia\", \"Montserrat\", \"Morocco\", \"Mozambique\", \"Myanmar\", \"Namibia\", \"Nauru\", \"Nepal\", \"Netherlands\", \"Netherlands Antilles\", \"New Caledonia\", \"New Zealand\", \"Nicaragua\", \"Niger\", \"Nigeria\", \"Niue\", \"Norfolk Island\", \"Northern Mariana Islands\", \"Norway\", \"Oman\", \"Pakistan\", \"Palau\", \"Panama\", \"Papua New Guinea\", \"Paraguay\", \"Peru\", \"Philippines\", \"Pitcairn\", \"Poland\", \"Portugal\", \"Puerto Rico\", \"Qatar\", \"Reunion\", \"Romania\", \"Russian Federation\", \"Rwanda\", \"Saint Kitts and Nevis\", \"Saint Lucia\", \"Saint Vincent and the Grenadines\", \"Samoa\", \"San Marino\", \"Sao Tome and Principe\", \"Saudi Arabia\", \"Senegal\", \"Seychelles\", \"Sierra Leone\", \"Singapore\", \"Slovakia (Slovak Republic)\", \"Slovenia\", \"Solomon Islands\", \"Somalia\", \"South Africa\", \"South Georgia and the South Sandwich Islands\", \"Spain\", \"Sri Lanka\", \"St. Helena\", \"St. Pierre and Miquelon\", \"Sudan\", \"Suriname\", \"Svalbard and Jan Mayen Islands\", \"Swaziland\", \"Sweden\", \"Switzerland\", \"Syrian Arab Republic\", \"Taiwan, Province of China\", \"Tajikistan\", \"Tanzania, United Republic of\", \"Thailand\", \"Togo\", \"Tokelau\", \"Tonga\", \"Trinidad and Tobago\", \"Tunisia\", \"Turkey\", \"Turkmenistan\", \"Turks and Caicos Islands\", \"Tuvalu\", \"Uganda\", \"Ukraine\", \"United Arab Emirates\", \"United Kingdom\", \"United States\", \"United States Minor Outlying Islands\", \"Uruguay\", \"Uzbekistan\", \"Vanuatu\", \"Venezuela\", \"Vietnam\", \"Virgin Islands (British)\", \"Virgin Islands (U.S.)\", \"Wallis and Futuna Islands\", \"Western Sahara\", \"Yemen\", \"Yugoslavia\", \"Zambia\", \"Zimbabwe\"]\n\n    const assetTypes = [\"CAR\",\"BIKE\",\"BUS\"];    \n    useEffect(() => {\n        props.CRMStores.getOwners()\n        console.log(props.CRMStores.owners)\n    }, [props.CRMStores])\n\n    let handleInput = props.UpdateStores.handleInput;\n    let data = props.UpdateStores\n\n    const addClient = () => {\n        console.log(\"In add client function\")\n        console.log(data.owner);\n        let newClient = {\n            last: data.last, first: data.first, email: data.email,\n            sold: 0, date: data.date, owner: data.owner, country: data.country, email_type: null\n        }\n        props.CRMStores.addClient(newClient)\n    }\n    return (\n        <div className='inputsContainer'> <h5>Add New Client:</h5>\n            <input name={'first'} type={'text'} onChange={handleInput} placeholder={'First Name'} required />\n            <input name={'last'} type={'text'} onChange={handleInput} placeholder={'Last Name'} required />\n            <input name={'email'} type={'text'} onChange={handleInput} placeholder={'Email'} required />\n            <input name={'date'} type={'date'} onChange={handleInput} placeholder={'Date'} required />\n            <div className='y'><select onChange={handleInput} name={'country'} className=\"dropdown\">\n                <option selected hidden>Select Country</option>\n                {countries.map(country => <option value={country} >{country}</option>)}\n            </select></div>\n            <div className='assetType'><select onChange={handleInput} name={'Asset Type'} className=\"dropdown\">\n                <option selected hidden>Select Country</option>\n                {countries.map(country => <option value={country} >{country}</option>)}\n            </select></div>\n            <div className='y'> <select name={'owner'} onChange={handleInput} className=\"dropdown\" >\n                <option selected hidden>Select Owner</option>\n                {props.CRMStores.owners && props.CRMStores.owners\n                    .map(owner => <option value={owner.owner} >{owner.owner}</option>)}\n            </select></div>\n            <div className='assetType'> <select name={'asset_type'} onChange={handleInput} className=\"dropdown\" >\n                <option selected hidden>Select Asset Type</option>\n                {[\"CAR\",\"BIKE\",\"BUS\"]\n                    .map(assetType => <option value={assetType} >{assetType}</option>)}\n            </select></div>\n            <div className='y'><Button variant=\"contained\" onClick={addClient}>Add new client</Button></div>\n        </div>\n    )\n}\n))\n\nexport default AddClient;"]},"metadata":{},"sourceType":"module"}