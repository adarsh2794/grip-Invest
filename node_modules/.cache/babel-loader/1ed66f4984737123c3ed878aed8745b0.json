{"ast":null,"code":"var _jsxFileName = \"/home/adarsh/Desktop/Companies/crm/src/components/client/client.js\",\n    _s2 = $RefreshSig$();\n\nimport { Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from '@material-ui/core';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport { inject, observer } from 'mobx-react';\nimport { Multiselect } from \"multiselect-react-dropdown\";\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledTableCell = withStyles(theme => ({\n  head: {\n    backgroundColor: '#cfd8dc',\n    color: 'black',\n    font: \"15px Arial, sans-serif\"\n  },\n  body: {\n    font: \"13px Arial, sans-serif\"\n  }\n}))(TableCell);\nconst SearchBoxStyle = {\n  chips: {\n    background: \"blue\"\n  },\n  searchBox: {\n    border: \"none\",\n    \"border-bottom\": \"1px solid blue\",\n    \"border-radius\": \"0px\"\n  },\n  multiselectContainer: {\n    color: \"blue\",\n    width: \"300px\",\n    fontSize: 10\n  }\n};\nconst StyledTableRow = withStyles(theme => ({\n  root: {\n    '&:nth-of-type(odd)': {\n      backgroundColor: theme.palette.action.hover\n    }\n  }\n}))(TableRow);\n\nfunction createData(surname, name, country, firstContact, email, sold, owner, asset_type) {\n  return {\n    surname,\n    name,\n    country,\n    firstContact,\n    email,\n    sold,\n    owner,\n    asset_type\n  };\n}\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 700\n  }\n});\n/**\n* This client function is exposed and routed from \"/\" in App.js\n* Functions\n* 1.Injects CRMStores where we have the list of \"actions\",\"observers\"\n* 2.It calls React Hooks\n*  a.useState which will set input as the passed state and setInput = function to update the state\n* \n*/\n\nconst Clients = inject(\"CRMStores\")(observer(_s2(props => {\n  var _props$CRMStores,\n      _props$CRMStores2,\n      _s = $RefreshSig$();\n\n  _s2();\n\n  //Sets the relevant clients in the state and then updates the state by calling setRelevantClients\n  const [relevantClients, setRelevantClients] = useState([...((_props$CRMStores = props.CRMStores) === null || _props$CRMStores === void 0 ? void 0 : _props$CRMStores.clients)]);\n  const [searchParamters, setSearchParameters] = useState([...((_props$CRMStores2 = props.CRMStores) === null || _props$CRMStores2 === void 0 ? void 0 : _props$CRMStores2.searchParamters)]);\n  /**\n  * Use effect is called when render is completed and we want to update anything after that\n  */\n\n  useEffect(() => {\n    const fetchData = async () => {\n      await props.CRMStores.getClients();\n      setRelevantClients(props.CRMStores.clients);\n      console.log(relevantClients);\n    };\n\n    resetData();\n  }, []);\n  const rows = relevantClients && relevantClients.map(c => {\n    return createData(c.last, c.first, c.country_name, c.date, c.email, c.sold, c.owner, c.asset_type);\n  });\n\n  const resetData = async () => {\n    await props.CRMStores.getClients();\n    setRelevantClients(props.CRMStores.clients);\n    console.log(relevantClients);\n  };\n\n  function onSelectOrRemove(selectedList, selectedItem) {\n    _s();\n\n    if (selectedList.length == 0) {\n      useEffect();\n    }\n\n    const fetchData = async () => {\n      await props.CRMStores.getSearchedClients(selectedList);\n      setRelevantClients(props.CRMStores.clients);\n    };\n\n    fetchData();\n  }\n\n  _s(onSelectOrRemove, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Multiselect, {\n      options: searchParamters,\n      isObject: true,\n      displayValue: \"value\",\n      groupBy: \"key\",\n      showCheckbox: true,\n      style: SearchBoxStyle,\n      onSelect: onSelectOrRemove // Function will trigger on select event\n      ,\n      onRemove: onSelectOrRemove\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n      component: Paper,\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        className: classes.table,\n        \"aria-label\": \"customized table\",\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(StyledTableCell, {\n              align: \"center\",\n              children: \"Client Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n              align: \"center\",\n              children: \"Client Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n              align: \"center\",\n              children: \"Country\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n              align: \"center\",\n              children: \"Asset Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n              align: \"center\",\n              children: \"Mediator\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n              align: \"center\",\n              children: \"Owner Company\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n              align: \"center\",\n              children: \"Purchase Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n              align: \"center\",\n              children: \"Sold Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 7\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: rows.length && rows.map(row => /*#__PURE__*/_jsxDEV(StyledTableRow, {\n            children: [/*#__PURE__*/_jsxDEV(StyledTableCell, {\n              align: \"center\",\n              children: [row.surname, \" \", row.name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 5\n            }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n              align: \"center\",\n              children: row.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 5\n            }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n              align: \"center\",\n              children: row.country\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 5\n            }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n              align: \"center\",\n              children: row.asset_type\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 5\n            }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n              align: \"center\",\n              children: \"GRIP INVEST\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 5\n            }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n              align: \"center\",\n              children: row.owner\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 5\n            }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n              align: \"center\",\n              children: row.firstContact\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 5\n            }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n              align: \"center\",\n              children: \"-\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 5\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 5\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 3\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 7\n  }, this);\n}, \"tecUhLgRFt2rEjnWOugKoqUMDCQ=\", false, function () {\n  return [useStyles];\n})));\nexport default Clients;","map":{"version":3,"sources":["/home/adarsh/Desktop/Companies/crm/src/components/client/client.js"],"names":["Paper","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","makeStyles","withStyles","inject","observer","Multiselect","React","useEffect","useState","StyledTableCell","theme","head","backgroundColor","color","font","body","SearchBoxStyle","chips","background","searchBox","border","multiselectContainer","width","fontSize","StyledTableRow","root","palette","action","hover","createData","surname","name","country","firstContact","email","sold","owner","asset_type","useStyles","table","minWidth","Clients","props","relevantClients","setRelevantClients","CRMStores","clients","searchParamters","setSearchParameters","fetchData","getClients","console","log","resetData","rows","map","c","last","first","country_name","date","onSelectOrRemove","selectedList","selectedItem","length","getSearchedClients","classes","row"],"mappings":";;;AAAA,SAASA,KAAT,EAAgBC,KAAhB,EAAuBC,SAAvB,EAAkCC,SAAlC,EAA6CC,cAA7C,EAA6DC,SAA7D,EAAwEC,QAAxE,QAAwF,mBAAxF;AACA,SAASC,UAAT,EAAqBC,UAArB,QAAuC,0BAAvC;AACA,SAASC,MAAT,EAAiBC,QAAjB,QAAiC,YAAjC;AACA,SAASC,WAAT,QAA4B,4BAA5B;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;AAGA,MAAMC,eAAe,GAAGP,UAAU,CAAEQ,KAAD,KAAY;AAC7CC,EAAAA,IAAI,EAAE;AACJC,IAAAA,eAAe,EAAE,SADb;AAEJC,IAAAA,KAAK,EAAE,OAFH;AAGJC,IAAAA,IAAI,EAAE;AAHF,GADuC;AAM7CC,EAAAA,IAAI,EAAE;AACJD,IAAAA,IAAI,EAAE;AADF;AANuC,CAAZ,CAAD,CAAV,CASpBjB,SAToB,CAAxB;AAWA,MAAMmB,cAAc,GAAG;AACrBC,EAAAA,KAAK,EAAE;AACLC,IAAAA,UAAU,EAAE;AADP,GADc;AAIrBC,EAAAA,SAAS,EAAE;AACTC,IAAAA,MAAM,EAAE,MADC;AAET,qBAAiB,gBAFR;AAGT,qBAAiB;AAHR,GAJU;AAUrBC,EAAAA,oBAAoB,EAAE;AACpBR,IAAAA,KAAK,EAAE,MADa;AAEpBS,IAAAA,KAAK,EAAE,OAFa;AAGpBC,IAAAA,QAAQ,EAAE;AAHU;AAVD,CAAvB;AAkBA,MAAMC,cAAc,GAAGtB,UAAU,CAAEQ,KAAD,KAAY;AAC5Ce,EAAAA,IAAI,EAAE;AACJ,0BAAsB;AACpBb,MAAAA,eAAe,EAAEF,KAAK,CAACgB,OAAN,CAAcC,MAAd,CAAqBC;AADlB;AADlB;AADsC,CAAZ,CAAD,CAAV,CAMnB5B,QANmB,CAAvB;;AAQA,SAAS6B,UAAT,CAAoBC,OAApB,EAA6BC,IAA7B,EAAmCC,OAAnC,EAA4CC,YAA5C,EAA0DC,KAA1D,EAAiEC,IAAjE,EAAuEC,KAAvE,EAA6EC,UAA7E,EAAyF;AACvF,SAAO;AAAEP,IAAAA,OAAF;AAAWC,IAAAA,IAAX;AAAiBC,IAAAA,OAAjB;AAA0BC,IAAAA,YAA1B;AAAwCC,IAAAA,KAAxC;AAA+CC,IAAAA,IAA/C;AAAqDC,IAAAA,KAArD;AAA2DC,IAAAA;AAA3D,GAAP;AACD;;AAED,MAAMC,SAAS,GAAGrC,UAAU,CAAC;AAC3BsC,EAAAA,KAAK,EAAE;AACLC,IAAAA,QAAQ,EAAE;AADL;AADoB,CAAD,CAA5B;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,OAAO,GAAGtC,MAAM,CAAC,WAAD,CAAN,CAAoBC,QAAQ,KAAEsC,KAAD,IAAW;AAAA;AAAA;AAAA;;AAAA;;AAEtD;AAEA,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCpC,QAAQ,CAAC,CAAC,wBAAGkC,KAAK,CAACG,SAAT,qDAAG,iBAAiBC,OAApB,CAAD,CAAD,CAAtD;AACA,QAAM,CAACC,eAAD,EAAkBC,mBAAlB,IAAyCxC,QAAQ,CAAC,CAAC,yBAAGkC,KAAK,CAACG,SAAT,sDAAG,kBAAiBE,eAApB,CAAD,CAAD,CAAvD;AAEA;AACF;AACA;;AAGExC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAM0C,SAAS,GAAG,YAAY;AAC5B,YAAMP,KAAK,CAACG,SAAN,CAAgBK,UAAhB,EAAN;AACAN,MAAAA,kBAAkB,CAACF,KAAK,CAACG,SAAN,CAAgBC,OAAjB,CAAlB;AACAK,MAAAA,OAAO,CAACC,GAAR,CAAYT,eAAZ;AACD,KAJD;;AAKAU,IAAAA,SAAS;AACV,GAPQ,EAON,EAPM,CAAT;AASA,QAAMC,IAAI,GAAGX,eAAe,IAAIA,eAAe,CAACY,GAAhB,CAAoBC,CAAC,IAAI;AACvD,WAAQ3B,UAAU,CAChB2B,CAAC,CAACC,IADc,EACRD,CAAC,CAACE,KADM,EACCF,CAAC,CAACG,YADH,EACiBH,CAAC,CAACI,IADnB,EACyBJ,CAAC,CAACtB,KAD3B,EACkCsB,CAAC,CAACrB,IADpC,EAC0CqB,CAAC,CAACpB,KAD5C,EACkDoB,CAAC,CAACnB,UADpD,CAAlB;AAEC,GAH6B,CAAhC;;AAKE,QAAMgB,SAAS,GAAG,YAAY;AAC5B,UAAMX,KAAK,CAACG,SAAN,CAAgBK,UAAhB,EAAN;AACAN,IAAAA,kBAAkB,CAACF,KAAK,CAACG,SAAN,CAAgBC,OAAjB,CAAlB;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAYT,eAAZ;AACD,GAJD;;AAMA,WAASkB,gBAAT,CAA0BC,YAA1B,EAAwCC,YAAxC,EAAsD;AAAA;;AAEpD,QAAGD,YAAY,CAACE,MAAb,IAAqB,CAAxB,EACA;AACEzD,MAAAA,SAAS;AACV;;AAED,UAAM0C,SAAS,GAAG,YAAY;AAC5B,YAAMP,KAAK,CAACG,SAAN,CAAgBoB,kBAAhB,CAAmCH,YAAnC,CAAN;AACAlB,MAAAA,kBAAkB,CAACF,KAAK,CAACG,SAAN,CAAgBC,OAAjB,CAAlB;AACD,KAHD;;AAIAG,IAAAA,SAAS;AAEV;;AA7CmD,KAgC3CY,gBAhC2C;;AA+CpD,QAAMK,OAAO,GAAG5B,SAAS,EAAzB;AACA,sBACE;AAAA,4BAAK,QAAC,WAAD;AACL,MAAA,OAAO,EAAES,eADJ;AAEL,MAAA,QAAQ,EAAE,IAFL;AAGL,MAAA,YAAY,EAAC,OAHR;AAIL,MAAA,OAAO,EAAC,KAJH;AAKL,MAAA,YAAY,EAAE,IALT;AAML,MAAA,KAAK,EAAI/B,cANJ;AAOL,MAAA,QAAQ,EAAE6C,gBAPL,CAOuB;AAPvB;AAQL,MAAA,QAAQ,EAAEA;AARL;AAAA;AAAA;AAAA;AAAA,YAAL,eAUA,QAAC,cAAD;AAAgB,MAAA,SAAS,EAAEnE,KAA3B;AAAA,6BACA,QAAC,KAAD;AAAO,QAAA,SAAS,EAAEwE,OAAO,CAAC3B,KAA1B;AAAiC,sBAAW,kBAA5C;AAAA,gCACA,QAAC,SAAD;AAAA,iCACA,QAAC,QAAD;AAAA,oCACA,QAAC,eAAD;AAAiB,cAAA,KAAK,EAAC,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADA,eAEA,QAAC,eAAD;AAAiB,cAAA,KAAK,EAAC,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFA,eAGA,QAAC,eAAD;AAAiB,cAAA,KAAK,EAAC,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHA,eAIA,QAAC,eAAD;AAAiB,cAAA,KAAK,EAAC,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJA,eAKA,QAAC,eAAD;AAAiB,cAAA,KAAK,EAAC,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBALA,eAMA,QAAC,eAAD;AAAiB,cAAA,KAAK,EAAC,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBANA,eAOA,QAAC,eAAD;AAAiB,cAAA,KAAK,EAAC,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAPA,eAQA,QAAC,eAAD;AAAiB,cAAA,KAAK,EAAC,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBARA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,gBADA,eAaJ,QAAC,SAAD;AAAA,oBACCe,IAAI,CAACU,MAAL,IAAeV,IAAI,CAACC,GAAL,CAAUY,GAAD,iBACvB,QAAC,cAAD;AAAA,oCACA,QAAC,eAAD;AAAiB,cAAA,KAAK,EAAC,QAAvB;AAAA,yBAAiCA,GAAG,CAACrC,OAArC,OAA+CqC,GAAG,CAACpC,IAAnD;AAAA;AAAA;AAAA;AAAA;AAAA,oBADA,eAEA,QAAC,eAAD;AAAiB,cAAA,KAAK,EAAC,QAAvB;AAAA,wBAAiCoC,GAAG,CAACjC;AAArC;AAAA;AAAA;AAAA;AAAA,oBAFA,eAGA,QAAC,eAAD;AAAiB,cAAA,KAAK,EAAC,QAAvB;AAAA,wBAAiCiC,GAAG,CAACnC;AAArC;AAAA;AAAA;AAAA;AAAA,oBAHA,eAIA,QAAC,eAAD;AAAiB,cAAA,KAAK,EAAC,QAAvB;AAAA,wBAAiCmC,GAAG,CAAC9B;AAArC;AAAA;AAAA;AAAA;AAAA,oBAJA,eAKA,QAAC,eAAD;AAAiB,cAAA,KAAK,EAAC,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBALA,eAMA,QAAC,eAAD;AAAiB,cAAA,KAAK,EAAC,QAAvB;AAAA,wBAAiC8B,GAAG,CAAC/B;AAArC;AAAA;AAAA;AAAA;AAAA,oBANA,eAOA,QAAC,eAAD;AAAiB,cAAA,KAAK,EAAC,QAAvB;AAAA,wBAAiC+B,GAAG,CAAClC;AAArC;AAAA;AAAA;AAAA;AAAA,oBAPA,eAQA,QAAC,eAAD;AAAiB,cAAA,KAAK,EAAC,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBARA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADc;AADhB;AAAA;AAAA;AAAA;AAAA,gBAbI;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YAVA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA2CD,CA3FyC;AAAA,UA+CxBK,SA/CwB;AAAA,GAA5B,CAAhB;AA6FE,eAAeG,OAAf","sourcesContent":["import { Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from '@material-ui/core';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport { inject, observer } from 'mobx-react';\nimport { Multiselect } from \"multiselect-react-dropdown\";\nimport React, { useEffect, useState } from 'react';\n\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: '#cfd8dc',\n    color: 'black',\n    font: \"15px Arial, sans-serif\"\n  },\n  body: {\n    font: \"13px Arial, sans-serif\"\n  },\n}))(TableCell);\n\nconst SearchBoxStyle = {\n  chips: {\n    background: \"blue\"\n  },\n  searchBox: {\n    border: \"none\",\n    \"border-bottom\": \"1px solid blue\",\n    \"border-radius\": \"0px\"\n    \n  },\n  multiselectContainer: {\n    color: \"blue\",\n    width: \"300px\",\n    fontSize: 10\n    \n  }\n};\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    '&:nth-of-type(odd)': {\n      backgroundColor: theme.palette.action.hover,\n    },\n  },\n}))(TableRow);\n\nfunction createData(surname, name, country, firstContact, email, sold, owner,asset_type) {\n  return { surname, name, country, firstContact, email, sold, owner,asset_type };\n}\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 700,\n  },\n});\n\n/**\n* This client function is exposed and routed from \"/\" in App.js\n* Functions\n* 1.Injects CRMStores where we have the list of \"actions\",\"observers\"\n* 2.It calls React Hooks\n*  a.useState which will set input as the passed state and setInput = function to update the state\n* \n*/\n\nconst Clients = inject(\"CRMStores\")(observer((props) => {\n  \n  //Sets the relevant clients in the state and then updates the state by calling setRelevantClients\n  \n  const [relevantClients, setRelevantClients] = useState([...props.CRMStores?.clients])\n  const [searchParamters, setSearchParameters] = useState([...props.CRMStores?.searchParamters])\n  \n  /**\n  * Use effect is called when render is completed and we want to update anything after that\n  */\n  \n  \n  useEffect(() => {\n    const fetchData = async () => {\n      await props.CRMStores.getClients()\n      setRelevantClients(props.CRMStores.clients)\n      console.log(relevantClients)\n    }\n    resetData()\n  }, [])\n  \n  const rows = relevantClients && relevantClients.map(c => {\n    return (createData(\n      c.last, c.first, c.country_name, c.date, c.email, c.sold, c.owner,c.asset_type))\n    })\n  \n    const resetData = async () => {\n      await props.CRMStores.getClients()\n      setRelevantClients(props.CRMStores.clients)\n      console.log(relevantClients)\n    }\n\n    function onSelectOrRemove(selectedList, selectedItem) {\n      \n      if(selectedList.length==0)\n      {\n        useEffect()\n      }\n      \n      const fetchData = async () => {\n        await props.CRMStores.getSearchedClients(selectedList)\n        setRelevantClients(props.CRMStores.clients)\n      }\n      fetchData()\n      \n    }\n    \n    const classes = useStyles();\n    return (\n      <div><Multiselect\n      options={searchParamters}\n      isObject={true}\n      displayValue=\"value\"\n      groupBy=\"key\"\n      showCheckbox={true}\n      style = {SearchBoxStyle}\n      onSelect={onSelectOrRemove} // Function will trigger on select event\n      onRemove={onSelectOrRemove}\n      />\n      <TableContainer component={Paper}>\n      <Table className={classes.table} aria-label=\"customized table\">\n      <TableHead>\n      <TableRow>\n      <StyledTableCell align=\"center\">Client Name</StyledTableCell>\n      <StyledTableCell align=\"center\">Client Email</StyledTableCell>\n      <StyledTableCell align=\"center\">Country</StyledTableCell>\n      <StyledTableCell align=\"center\">Asset Type</StyledTableCell>\n      <StyledTableCell align=\"center\">Mediator</StyledTableCell>\n      <StyledTableCell align=\"center\">Owner Company</StyledTableCell>\n      <StyledTableCell align=\"center\">Purchase Date</StyledTableCell>\n      <StyledTableCell align=\"center\">Sold Date</StyledTableCell>\n  </TableRow>\n  </TableHead>\n  <TableBody>\n  {rows.length && rows.map((row) => (\n    <StyledTableRow >\n    <StyledTableCell align=\"center\">{row.surname} {row.name}</StyledTableCell>\n    <StyledTableCell align=\"center\">{row.email}</StyledTableCell>\n    <StyledTableCell align=\"center\">{row.country}</StyledTableCell>\n    <StyledTableCell align=\"center\">{row.asset_type}</StyledTableCell>\n    <StyledTableCell align=\"center\">GRIP INVEST</StyledTableCell>\n    <StyledTableCell align=\"center\">{row.owner}</StyledTableCell>\n    <StyledTableCell align=\"center\">{row.firstContact}</StyledTableCell>\n    <StyledTableCell align=\"center\">-</StyledTableCell>\n    </StyledTableRow>\n    ))}\n    </TableBody>\n    </Table>\n    </TableContainer>\n    </div>\n    )\n  }))\n\n  export default Clients\n"]},"metadata":{},"sourceType":"module"}