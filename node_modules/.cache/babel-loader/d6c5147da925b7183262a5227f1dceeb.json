{"ast":null,"code":"var _jsxFileName = \"/home/adarsh/Desktop/Companies/crm/src/components/search/chipSearch.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Chip from '@material-ui/core/Chip';\nimport Paper from '@material-ui/core/Paper';\nimport { inject } from 'mobx-react';\nimport { observable } from 'mobx'; // import TagFacesIcon from '@material-ui/icons/TagFaces';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    justifyContent: 'center',\n    flexWrap: 'wrap',\n    listStyle: 'none',\n    padding: theme.spacing(0.5),\n    margin: 0\n  },\n  chip: {\n    margin: theme.spacing(0.5)\n  }\n}));\nconst ChipsArray = inject('CrmStores')(observer(_s(props => {\n  var _props$CRMStores;\n\n  _s();\n\n  const classes = useStyles();\n  const [chipData, setChipData] = useState([...((_props$CRMStores = props.CRMStores) === null || _props$CRMStores === void 0 ? void 0 : _props$CRMStores.owners)]);\n\n  const handleDelete = chipToDelete => () => {\n    setChipData(chips => chips.filter(chip => chip.key !== chipToDelete.key));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    component: \"ul\",\n    className: classes.root,\n    children: chipData.map(data => {\n      let icon; // if (data.label === 'React') {\n      //   icon = <TagFacesIcon />;\n      // }\n\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(Chip, {\n          icon: icon,\n          label: data.label,\n          onDelete: data.label === 'React' ? undefined : handleDelete(data),\n          className: classes.chip\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 15\n        }, this)\n      }, data.key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 7\n  }, this);\n}, \"kpk+W3iQWAosaSqBmPWW6fdHtvQ=\", false, function () {\n  return [useStyles];\n})));\nexport default ChipsArray;","map":{"version":3,"sources":["/home/adarsh/Desktop/Companies/crm/src/components/search/chipSearch.js"],"names":["React","makeStyles","Chip","Paper","inject","observable","useStyles","theme","root","display","justifyContent","flexWrap","listStyle","padding","spacing","margin","chip","ChipsArray","observer","props","classes","chipData","setChipData","useState","CRMStores","owners","handleDelete","chipToDelete","chips","filter","key","map","data","icon","label","undefined"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,SAASC,MAAT,QAAuB,YAAvB;AACA,SAASC,UAAT,QAA2B,MAA3B,C,CACA;;;AAEA,MAAMC,SAAS,GAAGL,UAAU,CAAEM,KAAD,KAAY;AACvCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,OAAO,EAAE,MADL;AAEJC,IAAAA,cAAc,EAAE,QAFZ;AAGJC,IAAAA,QAAQ,EAAE,MAHN;AAIJC,IAAAA,SAAS,EAAE,MAJP;AAKJC,IAAAA,OAAO,EAAEN,KAAK,CAACO,OAAN,CAAc,GAAd,CALL;AAMJC,IAAAA,MAAM,EAAE;AANJ,GADiC;AASvCC,EAAAA,IAAI,EAAE;AACJD,IAAAA,MAAM,EAAER,KAAK,CAACO,OAAN,CAAc,GAAd;AADJ;AATiC,CAAZ,CAAD,CAA5B;AAcA,MAAMG,UAAU,GAACb,MAAM,CAAC,WAAD,CAAN,CAAoBc,QAAQ,IAAEC,KAAD,IAAW;AAAA;;AAAA;;AACrD,QAAMC,OAAO,GAAGd,SAAS,EAAzB;AACA,QAAM,CAACe,QAAD,EAAWC,WAAX,IAA0BC,QAAQ,CAAC,CAAC,wBAAGJ,KAAK,CAACK,SAAT,qDAAG,iBAAiBC,MAApB,CAAD,CAAD,CAAxC;;AAGA,QAAMC,YAAY,GAAIC,YAAD,IAAkB,MAAM;AAC3CL,IAAAA,WAAW,CAAEM,KAAD,IAAWA,KAAK,CAACC,MAAN,CAAcb,IAAD,IAAUA,IAAI,CAACc,GAAL,KAAaH,YAAY,CAACG,GAAjD,CAAZ,CAAX;AACD,GAFD;;AAIA,sBACE,QAAC,KAAD;AAAO,IAAA,SAAS,EAAC,IAAjB;AAAsB,IAAA,SAAS,EAAEV,OAAO,CAACZ,IAAzC;AAAA,cACGa,QAAQ,CAACU,GAAT,CAAcC,IAAD,IAAU;AACtB,UAAIC,IAAJ,CADsB,CAGtB;AACA;AACA;;AAEA,0BACE;AAAA,+BACE,QAAC,IAAD;AACE,UAAA,IAAI,EAAEA,IADR;AAEE,UAAA,KAAK,EAAED,IAAI,CAACE,KAFd;AAGE,UAAA,QAAQ,EAAEF,IAAI,CAACE,KAAL,KAAe,OAAf,GAAyBC,SAAzB,GAAqCT,YAAY,CAACM,IAAD,CAH7D;AAIE,UAAA,SAAS,EAAEZ,OAAO,CAACJ;AAJrB;AAAA;AAAA;AAAA;AAAA;AADF,SAASgB,IAAI,CAACF,GAAd;AAAA;AAAA;AAAA;AAAA,cADF;AAUD,KAjBA;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD,CA/B0C;AAAA,UACzBxB,SADyB;AAAA,GAA5B,CAAjB;AAiCA,eAAeW,UAAf","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Chip from '@material-ui/core/Chip';\nimport Paper from '@material-ui/core/Paper';\nimport { inject } from 'mobx-react';\nimport { observable } from 'mobx';\n// import TagFacesIcon from '@material-ui/icons/TagFaces';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    justifyContent: 'center',\n    flexWrap: 'wrap',\n    listStyle: 'none',\n    padding: theme.spacing(0.5),\n    margin: 0,\n  },\n  chip: {\n    margin: theme.spacing(0.5),\n  },\n}));\n\nconst ChipsArray=inject('CrmStores')(observer((props) => {\n    const classes = useStyles();\n    const [chipData, setChipData] = useState([...props.CRMStores?.owners])\n  \n  \n    const handleDelete = (chipToDelete) => () => {\n      setChipData((chips) => chips.filter((chip) => chip.key !== chipToDelete.key));\n    };\n  \n    return (\n      <Paper component=\"ul\" className={classes.root}>\n        {chipData.map((data) => {\n          let icon;\n  \n          // if (data.label === 'React') {\n          //   icon = <TagFacesIcon />;\n          // }\n  \n          return (\n            <li key={data.key}>\n              <Chip\n                icon={icon}\n                label={data.label}\n                onDelete={data.label === 'React' ? undefined : handleDelete(data)}\n                className={classes.chip}\n              />\n            </li>\n          );\n        })}\n      </Paper>\n    );\n  }))\n \nexport default ChipsArray;"]},"metadata":{},"sourceType":"module"}