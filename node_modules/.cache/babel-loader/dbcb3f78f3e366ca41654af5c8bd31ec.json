{"ast":null,"code":"var _jsxFileName = \"/home/adarsh/Desktop/Companies/crm/src/components/actions/UpdateClient.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { inject, observer } from 'mobx-react';\nimport Button from '@material-ui/core/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UpdateClient = inject(\"CRMStores\", \"UpdateStores\")(observer(_s(props => {\n  _s();\n\n  useEffect(() => {\n    props.CRMStores.getOwners();\n    props.CRMStores.getEmailTypes();\n    console.log(props.CRMStores.emailTypes);\n  }, [props.CRMStores]);\n  let handleInput = props.UpdateStores.handleInput;\n\n  const updateEmailType = () => {\n    let update = {\n      tableName: 'email_type',\n      newValue: props.UpdateStores.emailType\n    };\n    props.CRMStores.updateEmailType(props.UpdateStores.last, update);\n  };\n\n  const updateOwner = () => {\n    let update = {\n      tableName: 'owner',\n      newValue: props.UpdateStores.owner\n    };\n    props.CRMStores.updateOwner(props.UpdateStores.last, update);\n  };\n\n  const updateSold = () => {\n    let update = {\n      tableName: 'sold',\n      newValue: 1\n    };\n    props.CRMStores.updateOwner(props.UpdateStores.last, update);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"inputsContainer\",\n    children: [\" \", /*#__PURE__*/_jsxDEV(\"h5\", {\n      children: \"Sell Client Assets:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 39\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      name: \"last\",\n      onChange: handleInput,\n      placeholder: \"name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"y\",\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"owner\",\n        onChange: handleInput,\n        className: \"dropdown\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          selected: true,\n          hidden: true,\n          children: \"Transfer ownership to:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 9\n        }, this), props.CRMStores.owners && props.CRMStores.owners.map(owner => /*#__PURE__*/_jsxDEV(\"option\", {\n          children: owner\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: updateOwner,\n        variant: \"contained\",\n        children: \"Transfer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"y\",\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"emailType\",\n        onChange: handleInput,\n        className: \"dropdown\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          selected: true,\n          hidden: true,\n          children: \" Send email: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), props.CRMStores.emailTypes && props.CRMStores.emailTypes.map(e => /*#__PURE__*/_jsxDEV(\"option\", {\n          children: e.email_type\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 23\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: updateEmailType,\n        variant: \"contained\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"y\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        onClick: updateSold,\n        variant: \"contained\",\n        children: \"Declare sold\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}, \"OD7bBpZva5O2jO+Puf00hKivP7c=\")));\nexport default UpdateClient;","map":{"version":3,"sources":["/home/adarsh/Desktop/Companies/crm/src/components/actions/UpdateClient.js"],"names":["React","useEffect","inject","observer","Button","UpdateClient","props","CRMStores","getOwners","getEmailTypes","console","log","emailTypes","handleInput","UpdateStores","updateEmailType","update","tableName","newValue","emailType","last","updateOwner","owner","updateSold","owners","map","e","email_type"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react'\nimport { inject, observer } from 'mobx-react'\nimport Button from '@material-ui/core/Button';\n\n\nconst UpdateClient = inject(\"CRMStores\", \"UpdateStores\")(observer((props) => {\n\n  useEffect(() => {\n    props.CRMStores.getOwners()\n    props.CRMStores.getEmailTypes()\n    console.log(props.CRMStores.emailTypes);\n  }, [props.CRMStores])\n  let handleInput = props.UpdateStores.handleInput;\n\n  const updateEmailType = () => {\n    let update = { tableName: 'email_type', newValue: props.UpdateStores.emailType }\n    props.CRMStores.updateEmailType(props.UpdateStores.last, update)\n  }\n\n  const updateOwner = () => {\n    let update = { tableName: 'owner', newValue: props.UpdateStores.owner }\n    props.CRMStores.updateOwner(props.UpdateStores.last, update)\n  }\n\n  const updateSold = () => {\n    let update = { tableName: 'sold', newValue: 1 }\n    props.CRMStores.updateOwner(props.UpdateStores.last, update)\n  }\n\n  return (\n    <div className='inputsContainer'> <h5>Sell Client Assets:</h5>\n      <input name=\"last\" onChange={handleInput} placeholder='name' />\n       <div className='y'>\n      <select name='owner' onChange={handleInput} className=\"dropdown\" >\n        <option selected hidden>Transfer ownership to:</option>\n        {props.CRMStores.owners && props.CRMStores.owners\n          .map(owner => <option >{owner}</option>)}\n      </select>\n      <Button onClick={updateOwner} variant=\"contained\">Transfer</Button>\n      </div>\n      <div className='y'>\n        <select  name='emailType' onChange={handleInput} className=\"dropdown\" >\n          <option selected hidden> Send email: </option>\n          {props.CRMStores.emailTypes && props.CRMStores.emailTypes\n            .map(e => <option >{e.email_type}</option>)}\n        </select>\n        <Button  onClick={updateEmailType} variant=\"contained\">Send</Button>\n      </div>\n      <div className='y'>\n      <Button onClick={updateSold} variant=\"contained\">Declare sold</Button>\n      </div>\n    </div>\n  )\n}))\n\nexport default UpdateClient;"]},"metadata":{},"sourceType":"module"}